# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-10-11 22:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('user_pic', models.FileField(blank=True, default='blank_user.png', null=True, upload_to=users.models.get_upload_file_name)),
                ('user_created', models.DateTimeField(auto_now_add=True)),
                ('user_updated', models.DateTimeField(auto_now=True)),
                ('play_level', models.CharField(blank=True, choices=[('1', 'White'), ('2', 'Red'), ('3', 'Yellow'), ('4', 'Green'), ('5', 'Blue'), ('6', 'Purple'), ('7', 'Brown'), ('8', 'Black')], default='1', max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, max_length=50, null=True)),
                ('user_credit', models.CharField(blank=True, default=0, max_length=4, null=True)),
                ('recurring_credit', models.CharField(blank=True, default=0, max_length=2, null=True)),
                ('course_reminder', models.BooleanField(default=True)),
                ('practice_reminder', models.BooleanField(default=True)),
                ('user_update', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('addr1', models.CharField(blank=True, max_length=50, null=True)),
                ('addr2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_main', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_other', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('location_created', models.DateTimeField(auto_now_add=True)),
                ('location_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_created_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail_type', models.CharField(blank=True, choices=[('CRE', 'User Created'), ('ACT', 'User Active'), ('UPD', 'Account Updated'), ('PRACT', 'User Practice Reminder'), ('SCHED', 'Course Scheduled'), ('CNCL', 'Course Cancelled'), ('REMD', 'Course Scheduled Reminder')], max_length=8, null=True)),
                ('from_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('cc', models.EmailField(blank=True, max_length=254, null=True)),
                ('bcc', models.EmailField(blank=True, max_length=254, null=True)),
                ('subject', models.CharField(blank=True, max_length=250, null=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('footer', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.CharField(max_length=250)),
                ('goal_target_date', models.DateTimeField(blank=True, max_length=50, null=True)),
                ('goal_complete', models.BooleanField(default=False)),
                ('goal_complete_date', models.DateTimeField(blank=True, max_length=50, null=True)),
                ('goal_notes', models.TextField(blank=True, null=True)),
                ('goal_created', models.DateTimeField(auto_now_add=True)),
                ('goal_updated', models.DateTimeField(auto_now=True)),
                ('goal_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_created_user', to=settings.AUTH_USER_MODEL)),
                ('goal_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='goal_updated_user', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_goal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=users.models.get_upload_file_name)),
                ('material_name', models.CharField(blank=True, max_length=50, null=True)),
                ('material_notes', models.TextField(blank=True, null=True)),
                ('material_added', models.DateTimeField(auto_now_add=True)),
                ('material_updated', models.DateTimeField(auto_now=True)),
                ('material_added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='material_added_user', to=settings.AUTH_USER_MODEL)),
                ('material_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='material_updated_user', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_material', to=settings.AUTH_USER_MODEL)),
                ('student_group', models.ManyToManyField(blank=True, related_name='group_student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('note_created', models.DateTimeField(auto_now_add=True)),
                ('note_updated', models.DateTimeField(auto_now=True)),
                ('note_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_created_user', to=settings.AUTH_USER_MODEL)),
                ('note_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note_updated_user', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_note', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.CharField(max_length=250)),
                ('objective_complete', models.BooleanField(default=False)),
                ('objective_complete_date', models.DateTimeField(blank=True, max_length=50, null=True)),
                ('objective_notes', models.TextField(blank=True, null=True)),
                ('objective_visible', models.BooleanField(default=False)),
                ('objective_priority', models.CharField(blank=True, max_length=3, null=True)),
                ('objective_created', models.DateTimeField(auto_now_add=True)),
                ('objective_updated', models.DateTimeField(auto_now=True)),
                ('objective_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objective_created_user', to=settings.AUTH_USER_MODEL)),
                ('objective_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objective_updated_user', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_objective', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPracticeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice_category', models.CharField(blank=True, choices=[('LEAD_TECHNIQUE', 'Lead Technique'), ('RHYTHM_TECHNIQUE', 'Rhythm Technique'), ('THEORY', 'Theory'), ('REPERTOIRE', 'Repertoire'), ('APPLIED_THEORY', 'Applied Theory')], max_length=20, null=True)),
                ('practice_item', models.CharField(max_length=50)),
                ('practice_time', models.CharField(blank=True, max_length=50, null=True)),
                ('practice_speed', models.CharField(blank=True, max_length=50, null=True)),
                ('practice_notes', models.TextField(blank=True, null=True)),
                ('practice_date', models.DateTimeField(blank=True, max_length=50, null=True)),
                ('practice_item_created', models.DateTimeField(auto_now_add=True)),
                ('practice_item_updated', models.DateTimeField(auto_now=True)),
                ('practice_item_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_created_user', to=settings.AUTH_USER_MODEL)),
                ('practice_item_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='log_updated_user', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_log', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentWishList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wish_item', models.CharField(max_length=250)),
                ('wish_item_complete', models.BooleanField(default=False)),
                ('wish_item_complete_date', models.DateTimeField(blank=True, max_length=50, null=True)),
                ('wish_item_notes', models.TextField(blank=True, null=True)),
                ('wish_item_created', models.DateTimeField(auto_now_add=True)),
                ('wish_item_updated', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_wishlist', to=settings.AUTH_USER_MODEL)),
                ('wish_item_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wish_item_created_user', to=settings.AUTH_USER_MODEL)),
                ('wish_item_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wish_item_updated_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_location', to='users.Location'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='user_updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
